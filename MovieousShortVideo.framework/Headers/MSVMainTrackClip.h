//
//  MSVMainTrackClip.h
//  MSVShortVideoKit
//
//  Created by Chris Wang on 18/3/1.
//  Copyright © 2018年 Movieous Team. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>
#import "MSVTypeDefines.h"
#import <MovieousBase/MovieousBase.h>

/**
 * @brief Type of main track fragment
 */
typedef NS_ENUM(NSInteger, MSVMainTrackClipType) {
    /**
     * Audio and video media resource type
     */
    MSVMainTrackClipTypeAV,
    /**
     * Image resource type
     */
    MSVMainTrackClipTypeImage
};

/**
 * @brief Main track segment
 */
@interface MSVMainTrackClip : NSObject <NSCopying>

/**
 * @brief User-defined ID field, business usage is used to distinguish objects
 */
@property (nonatomic, strong) NSString *ID;

/**
 * @brief Type of main track fragment
 */
@property (nonatomic, assign, readonly) MSVMainTrackClipType type;

/**
 * @brief Media file address
 */
@property (nonatomic, strong, readonly) NSURL *URL;

/**
 * @brief At the end of the last segment, the transition time at which this segment begins to connect
 * @warning It should be noted that the sum of the time of the first and last transition effects of each clip cannot exceed the valid duration of the clip, for instance,transition A:clip 1->clip 2, the time duration is 2s; transition B: clip 2->clip 3, the time duration is 3s, so the time of clip 2 at least greater than 5s, otherwise the error will come out.
 */
@property (nonatomic, assign) NSTimeInterval transitionDuration;

/**
 * @brief At the end of the last segment, the type of transition effect that this segment starts to connect, defaults to MSVVideoTransitionTypeDissolve
 */
@property (nonatomic, assign) MSVVideoTransitionType videoTransitionType;

// The following parameters are only valid for the main track segment of the MSVMainTrackClipTypeAV type
#pragma mark - video properties
/**
 * @brief The AVAsset object generated by the audio and video media files, you can get some required parameters here.
 */
@property (nonatomic, strong, readonly) AVAsset *asset;

/**
 * @brief Intercepting the time range that used in the media clip.
 * @warning This time range refers to the time range without the fast and slow processing and reverses processing,Also, if timeRange.startTime + timeRange.duration > total media duration,  the excess part will be ignored.
 */
@property (nonatomic, assign) MovieousTimeRange timeRange;

/**
 * @brief Speed of the audio clip
 * Generally, the following configuration can be performed：
 * Extremely fast：2.0
 * Fast：1.5
 * Standard：1.0
 * Slow：0.75
 * Extremely slow：0.5
 */
@property (nonatomic, assign) float speed;

/**
 * @brief The volume of the media audio, defaults to the preferredVolume that comes with the media file.
 */
@property (nonatomic, assign) float volume;

/**
 * @brief Begin apply reverse effect to this clip
 * @discussion Reverse operation may take some time for the first time, you can psss `progressHandler` to get operation progress, pass `completionHandler` to get operation result. After reverse operation has completed for the first time, apply again will take effect immediately.
 * @param reverse Reverse or not
 * @param progressHandler Operation progress callback, parameter `progress` is operation progress ranges from 0 ~ 1
 * @param completionHandler error 为 nil。Operation result callback, if error comes out, error object will convey the error.
 */
- (void)setReverse:(BOOL)reverse progressHandler:(void(^)(float progress))progressHandler completionHandler:(void(^)(NSError *error))completionHandler;

/**
 * @brief Cancel the running reverse process
 * @warning Cancel reverse operation there is not recover previoud reversed video, if you want to clear applied reverse effect, call `-setReverse:progressHandler:completionHandler:` and pass NO to parameter `reverse`
 */
- (void)cancelReverse;

/**
 * @brief Whether to playback the video backforward
 */
@property (nonatomic, assign, readonly) BOOL reverse;

// The following parameters are only valid for the main track segment of the MSVMainTrackClipTypeAV type
#pragma mark - image properties
/**
 * @brief Image object
 */
@property (nonatomic, assign, readonly) UIImage *image;

/**
 * @brief The duration of the main track segment in the main track, the duration parameter and speed affect each other, the specific operational relationship is： speed = timeRange.duration / durationAtMainTrack
 
 */
@property (nonatomic, assign) NSTimeInterval durationAtMainTrack;

/**
 * @brief Create a main track segment
 * @param type The type of main track segment
 * @param URL The file path of the main track fragment supports local files only
 * @param outError If an error occurs, return the error that occurred
 * @return If the creation is successful, the completed object is returned, otherwise returns nil
 */
+ (instancetype)mainTrackClipWithType:(MSVMainTrackClipType)type URL:(NSURL *)URL error:(NSError **)outError;

/**
 * @brief 使用 AVAsset Create the main track segment of audio and video type using AVAsset
 * @param asset AVAsset object used to create the main track segment
 * @param outError If an error occurs, return the error that occurred
 * @return If the creation is successful, the completed object is returned, otherwise returns nil
 */
+ (instancetype)mainTrackClipWithAsset:(AVAsset *)asset error:(NSError **)outError;

/**
 * @brief Create a main track segment of a image type using UIImage
 * @param image UIImage object used to create the main track segment
 * @param outError If an error occurs, return the error that occurred
 * @return If the creation is successful, the completed object is returned, otherwise returns nil
 */
+ (instancetype)mainTrackClipWithImage:(UIImage *)image duration:(NSTimeInterval)duration error:(NSError **)outError;

/**
 * @brief Initialize a main track segment
 * @param type Type of main track segment
 * @param URL The file path of the main track fragment supports local files only
 * @param outError If an error occurs, return the error that occurred
 * @return If the initialization is successful, the completed object is returned, otherwise returns nil
 */
- (instancetype)initWithType:(MSVMainTrackClipType)type URL:(NSURL *)URL error:(NSError **)outError;

/**
 * @brief Initialize a main track segment of an audio and video type using AVAsset
 * @param asset AVAsset object used to create the main track segment
 * @param outError If an error occurs, return the error that occurred
 * @return If the initialization is successful, the completed object is returned, otherwise returns nil
 */
- (instancetype)initWithAsset:(AVAsset *)asset error:(NSError **)outError;

/**
 * @brief Initialize a main track segment of a image type using UIImage
 * @param image UIImage object used to create the main track segment
 * @param duration Image duration
 * @param outError If an error occurs, return the error that occurred
 * @return If the initialization is successful, the completed object is returned, otherwise returns nil
 */
- (instancetype)initWithImage:(UIImage *)image duration:(NSTimeInterval)duration error:(NSError **)outError;

/**
 * @brief Verify that the main track segment is valid or not
 * @param outError If an error occurs, return the error that occurred
 * @return Valid operation return YES, invalid operation return NO
 */
- (BOOL)validateWithError:(NSError **)outError;

/**
 * @brief Refresh inner Asset objects，need to be called when received `AVAudioSessionMediaServicesWereResetNotification` notification
 */
- (void)refreshAsset;

@end

